<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2019/3/5
 * Time: 15:55
 * Author CleverStone
 * Github https://www.github.com/cleverstone
 * Blog https://cnblogs.com/hellow-world
 */

namespace app\vp\controller;

use app\common\Helper;
use app\common\model\AdminRole;
use app\common\VpController;
use think\Cache;

/**
 * 角色控制器
 *
 * Class Role
 * @package app\vp\controller
 * @author CleverStone
 * @github https://www.github.com/cleverstone
 * @blog https://cnblogs.com/hellow-world
 */
class Role extends VpController
{
    /**
     * 初始化控制
     *
     * @return \think\response\Json|void
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     * @author CleverStone
     * @github https://www.github.com/cleverstone
     * @blog https://cnblogs.com/hellow-world
     * @api *
     */
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $curAction = $this->request->action(); // 非小驼峰
        $accessClearCacheAction = ['add', 'delete', 'toggle', 'update', 'connect'];
        if (in_array($curAction, $accessClearCacheAction, true)) {
            $cacheConfig = config('cache.');
            $cache = new Cache($cacheConfig);
            $cache->clear();
        }
    }

    /**
     * 获取角色列表
     *
     * @return \think\response\Json
     * @throws \think\exception\DbException
     * @author CleverStone
     * @github https://www.github.com/cleverstone
     * @blog https://cnblogs.com/hellow-world
     * @api *
     */
    public function role()
    {
        $model = new AdminRole();
        $pagination = $model->getRoleList($this->get);
        $data = $pagination->toArray();
        $page = $pagination->render();

        return $this->asJson(1, 'success', '请求成功', ['page' => $page, 'list' => $data]);
    }

    /**
     * 新增角色
     *
     * @return \think\response\Json
     * @author CleverStone
     * @github https://www.github.com/cleverstone
     * @blog https://cnblogs.com/hellow-world
     * @api *
     */
    public function add()
    {
        $post = $this->post;
        $validation = $this->validate($post, 'role.add');
        if ($validation !== true) {
            return $this->asJson(0, 'error', $validation);
        }

        $result = AdminRole::quickCreate([
            'name' => $post['role'],
            'description' => $post['desc'],
            'sort' => $post['sort'],
            'create_time' => Helper::timeFormat(time(), 's'),
            'update_time' => Helper::timeFormat(time(), 's'),
            'status' => 1,
            'roletype' => $post['roletype']
        ]);

        if ($result) {
            return $this->asJson(1, 'success', '新增成功');
        }

        return $this->asJson(0, 'error', "新增失败");
    }

    /**
     * 获取所有正常角色
     *
     * @return \think\response\Json
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     * @author CleverStone
     * @github https://www.github.com/cleverstone
     * @blog https://cnblogs.com/hellow-world
     * @api *
     */
    public function all()
    {
        $model = new AdminRole();
        $list = $model->getAll();

        return $this->asJson(1, 'success', '请求成功', $list);
    }

    /**
     * 删除角色
     *
     * @param null $id // 角色ID
     * @return \think\response\Json
     * @throws \think\Exception
     * @throws \think\exception\PDOException
     * @author CleverStone
     * @github https://www.github.com/cleverstone
     * @blog https://cnblogs.com/hellow-world
     * @api *
     */
    public function delete($id = null)
    {
        if (!$id) {
            return $this->asJson(0, 'error', '删除失败');
        }

        $model = new AdminRole();
        $result = $model->deleteRole($id);

        if (!is_string($result)) {
            if ($result === true) {
                return $this->asJson(1, 'success', '删除成功');
            }
            return $this->asJson(0, 'error', '删除失败');
        }

        return $this->asJson(0, 'error', $result);
    }

    /**
     * 排序
     *
     * @param $id
     * @param $sort
     * @return \think\response\Json
     * @author CleverStone
     * @github https://www.github.com/cleverstone
     * @blog https://cnblogs.com/hellow-world
     * @api *
     */
    public function sort($id, $sort)
    {
        AdminRole::quickCreate([
            'id' => $id,
            'sort' => (int)$sort,
        ], true);

        return $this->asJson(1, 'success', '排序成功');
    }

    /**
     * 冻结解冻
     *
     * @param $id // 角色ID
     * @param $status // 状态
     * @return \think\response\Json
     * @author CleverStone
     * @github https://www.github.com/cleverstone
     * @blog https://cnblogs.com/hellow-world
     * @api *
     */
    public function toggle($id, $status)
    {
        if ($status == 0) {
            $data = AdminRole::quickGetOne($id);
            if (!empty($data)) {
                $name = $data['name'];
                if (!strcasecmp($name, '超级管理员')) {
                    return $this->asJson(0, 'error', '系统角色“超级管理员”不能被冻结！');
                }
            }
        }

        AdminRole::quickCreate([
            'id' => $id,
            'status' => (int)$status,
        ], true);

        if ($status == 1) {
            return $this->asJson(1, 'success', '解冻成功');
        }

        return $this->asJson(1, 'success', '冻结成功');
    }

    /**
     * 获取详情
     *
     * @param $id // 角色ID
     * @return \think\response\Json
     * @author CleverStone
     * @github https://www.github.com/cleverstone
     * @blog https://cnblogs.com/hellow-world
     * @api *
     */
    public function info($id)
    {
        $data = AdminRole::quickGetOne((int)$id);

        return $this->asJson(1, 'success', '请求成功', $data);
    }

    /**
     * 修改角色
     *
     * @return \think\response\Json
     * @author CleverStone
     * @github https://www.github.com/cleverstone
     * @blog https://cnblogs.com/hellow-world
     * @api *
     */
    public function update()
    {
        $post = $this->post;
        $validation = $this->validate($post, 'role.update');
        if ($validation !== true) {
            return $this->asJson(0, 'error', $validation);
        }

        $roleData = AdminRole::quickGetOne($post['id']);
        if (!empty($roleData)) {
            $name = $roleData['name'];
            if (!strcasecmp($name, '超级管理员')) {
                return $this->asJson(0, 'error', '系统角色“超级管理员”不能被修改！');
            }
        }

        AdminRole::quickCreate([
            'id' => $post['id'],
            'name' => $post['role'],
            'description' => $post['desc'],
        ], true);

        return $this->asJson(1, 'success', '修改成功');
    }

    /**
     * 获取用户权限
     *
     * @param $id
     * @return array|mixed|string
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     * @author CleverStone
     * @github https://www.github.com/cleverstone
     * @blog https://cnblogs.com/hellow-world
     * @api *
     */
    public function auth($id)
    {
        $model = new AdminRole();
        $data = $model->getRoleAuth($id);
        if (is_string($data)) {
            return $this->asJson(0, 'error', $data);
        }

        return $this->asJson(1, 'success', '请求成功', $data);
    }

    /**
     * 保存权限节点
     *
     * @return \think\response\Json
     * @author CleverStone
     * @github https://www.github.com/cleverstone
     * @blog https://cnblogs.com/hellow-world
     * @api *
     */
    public function connect()
    {
        $post = $this->post;
        $validate = $this->validate($post, 'role.auth');
        if ($validate !== true) {
            return $this->asJson(0, 'error', $validate);
        }

        $model = new AdminRole();
        $result = $model->saveAuth($post);
        if ($result === true) {
            return $this->asJson(1, 'success', '保存成功');
        }

        return $this->asJson(0, 'error', $result);
    }

    /**
     * 插入测试数据接口(测试用)
     *
     * @author CleverStone
     * @github https://www.github.com/cleverstone
     * @blog https://cnblogs.com/hellow-world
     * @api *
     */
    public function batch()
    {
        exit(0);
        $model = new AdminRole();
        $model->faker();
    }
}