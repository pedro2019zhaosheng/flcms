<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2019/3/22
 * Time: 10:28
 * Author CleverStone
 * Github https://www.github.com/cleverstone
 * Blog https://cnblogs.com/hellow-world
 */

namespace app\api\controller;

use app\common\Config;
use app\common\model\Lottery;
use app\common\relation\Data2;
use app\common\RestController;
use app\common\model\JczqBase;
use app\common\Helper;

/**
 * 足彩控制器
 *
 * Class Login
 * @package app\api\controller
 * @author CleverStone
 * @github https://www.github.com/cleverstone
 * @blog https://cnblogs.com/hellow-world
 */
class Football extends RestController
{
    use Data2;

    /**
     * authentication彩种列表
     *
     * @param array $disableAuthAction
     * @author CleverStone
     * @github https://www.github.com/cleverstone
     * @blog https://cnblogs.com/hellow-world
     */
    protected function init(array $disableAuthAction = [])
    {
        $disableAuthAction = ['footList', 'footListDG', 'searchFoot'];
        parent::init($disableAuthAction); // TODO: Change the autogenerated stub
    }

    /**
     * @desc 足彩列表
     * @author LiBin
     * @return \think\response\Json
     * @throws \Exception
     * @date 2019-04-03
     */
    public function footList()
    {
        $get = $this->get;
        $model = new JczqBase();
        $findData = [
            'a.match_num',//比赛编号
            'a.league_name',//联赛名称
            'a.host_name',//主队名称
            'a.guest_name',//客队名称
            'a.cutoff_time',//手动截止时间
            'a.sys_cutoff_time',//系统截止时间
            'a.rqs',//让球数
            'a.jc_num',//竞彩编号
            'b.sp_spf',//胜平负奖金指数
            'b.sp_rqspf',//让球胜平负奖金指数
            'b.sp_bf',//全场比分奖金指数
            'b.sp_jqs',//总进球数奖金指数
            'b.sp_bqc',//半全场奖金指数
        ];
        $where[] = ['sale_status', '=', 1];//竞彩出售中
        if (!empty($get['date'])) {
            if ($get['date'] == 1) {//今天
                $date = date('Y-m-d');
                $where[] = ['jc_date', 'between', [$date . ' 00:00:00', $date . ' 23:59:59']];
            }
            if ($get['date'] == 2) {//明天
                $date = date("Y-m-d", strtotime("+1 day"));
                $where[] = ['jc_date', 'between', [$date . ' 00:00:00', $date . ' 23:59:59']];
            }
        }

        $footData = $model->getFootballData($where, $findData);
        if (!count($footData)) {
            return $this->asNewJson('footlistRet', 1, 'success', '获取成功');
        }

        foreach ($footData as $k => $v) {
            if (empty($v['cutoff_time'])) {
                $footData[$k]['cutoff_time'] = $v['sys_cutoff_time'];
            }

            $footData[$k]['cutoff_time'] = date('H:i', strtotime($footData[$k]['cutoff_time']));
            $sp_spf = Helper::jsonDecode($v['sp_spf']);//胜平负
            $sp_rqspf = Helper::jsonDecode($v['sp_rqspf']);//让球胜平负
            $bf = Helper::jsonDecode($v['sp_bf']);//比分
            $jqs = Helper::jsonDecode($v['sp_jqs']);//进球数
            $bqc = Helper::jsonDecode($v['sp_bqc']);//半全场
            empty($sp_rqspf['H']) ? $rqs = '0' : $rqs = $sp_rqspf['H'];
            $footData[$k]['rqs'] = $rqs;//让球数
            $theOdds = $this->oddSort($sp_spf, $sp_rqspf, $bf, $jqs, $bqc);
            $footData[$k]['oddsOne'] = $theOdds[0];
            $footData[$k]['oddsTwo'] = $theOdds[1];
            $footData[$k]['is_dg'] = $theOdds['dg']['is_dg'];//是否是单关 0否 1是
            $footData[$k]['spf_dg'] = $theOdds['dg']['spf'];//胜平负单关 0否 1是
            $footData[$k]['rqs_dg'] = $theOdds['dg']['rqspf'];//让球数单关 0否 1是
            $footData[$k]['bf_dg'] = $theOdds['dg']['bf'];//比分单关 0否 1是
            $footData[$k]['jqs_dg'] = $theOdds['dg']['jqs'];//进球数单关 0否 1是
            $footData[$k]['bqc_dg'] = $theOdds['dg']['bqc'];//半全场单关 0否 1是
            unset($footData[$k]['sys_cutoff_time']);
            unset($footData[$k]['sp_spf']);
            unset($footData[$k]['sp_rqspf']);
            unset($footData[$k]['sp_bf']);
            unset($footData[$k]['sp_jqs']);
            unset($footData[$k]['sp_bqc']);
        }

        //获取足彩ID
        $lottery = new Lottery();
        $idData = $lottery->getOneLottery(['code' => Config::ZC_CODE], 'id');
        $funcName = 'footlistRet';
        $code = 1;
        $status = 'success';
        $msg = '获取成功';
        $id = (string)$idData['id'];
        $args = $footData;

        return json(compact('funcName', 'code', 'status', 'msg', 'id', 'args'));
    }

    /**
     * @desc 赛事检索
     * @auther LiBin
     * @throws \Exception
     * @return \think\response\Json
     * @date 2019-04-08
     */
    public function searchFoot()
    {
        $get = $this->get;
        $model = new JczqBase();
        $findData = [
            'match_num',//比赛编号
        ];
        if (!empty($get['date'])) {
            if ($get['date'] == 1) {//今天
                $date = date('Y-m-d');
                $where[] = ['jc_date', 'between', [$date . ' 00:00:00', $date . ' 23:59:59']];
            }
            if ($get['date'] == 2) {//明天
                $date = date("Y-m-d", strtotime("+1 day"));
                $where[] = ['jc_date', 'between', [$date . ' 00:00:00', $date . ' 23:59:59']];
            }
        } else {
            $where[] = ['sale_status', '=', 1];//竞彩出售中
        }

        $footData = $model->getBase($where, $findData);
        if (!count($footData)) {
            return $this->asNewJson('searchfootRet', 1, 'success', '获取成功');
        }

        $list = [];
        foreach ($footData as $k => $v) {
            $list[] = $v['match_num'];
        }

        return $this->asNewJson('searchfootRet', 1, 'success', '获取成功', $list);
    }

    /**
     * @desc 单关列表
     * @author LiBin
     * @return mixed
     * @throws \Exception
     * @date 2019-03-27
     */
    public function footListDG()
    {
        $data = $this->get;
        $model = new JczqBase();
        $findData = [
            'a.match_num', // 足球赛事编号
            'a.league_name',  // 联赛名称
            'a.host_name', // 组队名称
            'a.guest_name', // 客队名称
            'a.cutoff_time', // 手动截止时间
            'a.sys_cutoff_time', // 系统截止时间
            'a.rqs', // 让球数
            'a.host_icon', // 主队图标
            'a.guest_icon', // 客队图标
            'a.jc_num', // 竞彩标号
            'b.sp_spf', // 胜平负
            'b.sp_rqspf', // 让胜平负
            'b.sp_bf', // 比分
            'b.sp_jqs', // 进球数
            'b.sp_bqc', // 半全场
        ];
        $where[] = ['sale_status', '=', 1];//竞彩出售中
        $footData = $model->getFootballData($where, $findData);
        if (!count($footData)) {
            return $this->asNewJson($data['type'] . 'Ret', 1, 'success', '获取成功');
        }

        //单关的方式 spf 胜平负 jqs 进球数 bf 比分 jqs 进球数 bqc 半全场
        $result = [];
        switch ($data['type']) {
            case 'spf'://胜平负
                $result = $this->oddSortDg($footData, 'spf');
                break;
            case 'jqs'://进球数
                $result = $this->oddSortDg($footData, 'jqs');
                break;
            case 'bf'://比分胜平负
                $result = $this->oddSortDg($footData, 'bf');
                break;
            case 'bqc': //半全场胜平负
                $result = $this->oddSortDg($footData, 'bqc');
                break;
        }

        return $this->asNewJson($data['type'] . 'Ret', 1, 'success', '获取成功', $result);
    }
}